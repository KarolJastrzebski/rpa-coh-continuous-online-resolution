#!groovy

properties([
    [
        $class: 'GithubProjectProperty',
        displayName: 'COH Continuous Online Resolution',
        projectUrlStr: 'https://github.com/hmcts/coh-continuous-online-resolution'
    ],
//    parameters(),
    pipelineTriggers([
        [$class: 'GitHubPushTrigger']
    ])
])

@Library("Infrastructure")

def type = "java"
def product = "coh"
def component = "cor"
def channel = '#coh-pipeline'

List<LinkedHashMap<String, Object>> secrets = [
        secret('cor-s2s-token', 'TEST_S2S_TOKEN')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}



withPipeline(type , product, component) {
    before('smoketest:aks') {
        withAksClient('nonprod') {
// Vars needed for AKS testing - keep values in sync with: /src/kubernetes/deployment.template.yaml
// THESE WILL BE OVERWRITTEN IN ASE DEPLOYMENTS WITH TERRAFORM OUTPUTS.TF
// THESE CAN BE PICKED UP IN INTEGRATION-TEST CODE DIRECTLY
            env.IDAM_API_URL = 'https://preprod-idamapi.reform.hmcts.net:3511'
            env.S2S_URL = 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
            env.SPRING_DATASOURCE_URL = 'jdbc:postgresql://localhost:5432/cor?ssl=disable'
        }
    }
    setVaultName('coh-cor')
    loadVaultSecrets(secrets)
    enableSlackNotifications(channel)
//    enableDbMigration()
    enableDockerBuild()

    enableDeployToAKS()

    after('functionalTest:aat') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/build/reports/cucumber/**/*'
        publishHTML target: [
                allowMissing         : true,
                alwaysLinkToLastBuild: true,
                keepAll              : true,
                reportDir            : "build/reports/cucumber/html/",
                reportFiles          : "index.html",
                reportName           : "Functional Tests"
        ]
    }

    after('functionalTest:preview') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/build/reports/cucumber/**/*'
        publishHTML target: [
                allowMissing         : true,
                alwaysLinkToLastBuild: true,
                keepAll              : true,
                reportDir            : "build/reports/cucumber/html/",
                reportFiles          : "index.html",
                reportName           : "Functional Tests"
        ]
    }
}
