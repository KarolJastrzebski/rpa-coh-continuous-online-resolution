---
#
# Shared Config
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: shared-config
  namespace: ${NAMESPACE}
data:
  POSTGRES_USER: cor
  POSTGRES_PASSWORD: cor
---
#
# Rhubarb Config
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: ${SERVICE_NAME}-config
  namespace: ${NAMESPACE}
data:
  POSTGRES_HOST: localhost
  POSTGRES_DATABASE: cor
  POSTGRES_SSL_MODE: disable
---
#
# Rhubarb + Postgres in the same pod
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: postgres:10-alpine
        name: ${SERVICE_NAME}-postgres
        envFrom:
          - configMapRef:
              name: shared-config
        env:
         - name: POSTGRES_USER
           value: "cor"
         - name: POSTGRES_PASSWORD
           value: "cor"
         - name: POSTGRES_DB
           value: "cor"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        imagePullPolicy: Always
        - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        envFrom:
          - configMapRef:
              name: shared-config
          - configMapRef:
              name: ${SERVICE_NAME}-config
        env:
#            Import variables from vault
          - name: S2S_KEY
            value: "${TEST_S2S_TOKEN}"
          - name: APPINSIGHTS_INSTRUMENTATIONKEY
            value: 'test_app'
          - name: IDAM_API_URL
            value: 'https://preprod-idamapi.reform.hmcts.net:3511'
          - name: S2S_URL
            value: 'http://rpe-service-auth-provider-aat.service.core-compute-aat.internal'
          - name: test-url
            value: 'http://localhost:8080'
#            Import from main.tf
#           Use the postgres db created for the app further down the file
          - name: POSTGRES_HOST
            value: 'shared-database'
          - name: POSTGRES_DATABASE
            value: 'cor'
          - name: POSTGRES_USER
            value: 'cor'
          - name: POSTGRES_PASSWORD
            value: 'cor'
#            db
          - name: SPRING_DATASOURCE_URL
            value: 'jdbc:postgresql://shared-database:5432/cor?ssl=disable'
          - name: SPRING_DATASOURCE_USERNAME
            value: 'cor'
          - name: SPRING_DATASOURCE_PASSWORD
            value: 'cor'
          - name: ENABLE_DB_MIGRATE
            value: 'true'
          - name: REFORM_SERVICE_NAME
            value: 'coh-cor' # See em_anno_app_url in variables.tf
          - name: REFORM_TEAM
            value: 'coh'
          - name: REFORM_SERVICE_TYPE
            value: 'java'
          - name: REFORM_ENVIRONMENT
            value: 'preview'
          - name: PACKAGES_NAME
            value: 'cor'
          - name: PACKAGES_PROJECT
            value: 'coh'
          - name: PACKAGES_ENVIRONMENT
            value: 'preview'
#            - name: ROOT_APPENDER
#              value: 'JSON_CONSOLE'
          - name: JSON_CONSOLE_PRETTY_PRINT
            value: 'false'
          - name: LOG_OUTPUT
            value: 'single'
          - name: ROOT_LOGGING_LEVEL
            value: 'INFO'
          - name: LOG_LEVEL_SPRING_WEB
            value: 'INFO'
          - name: LOG_LEVEL_DM
            value: 'INFO'
          - name: SHOW_SQL
            value: 'true'
          - name: ENDPOINTS_HEALTH_SENSITIVE
            value: 'true'
          - name: ENDPOINTS_INFO_SENSITIVE
            value: 'false'
          - name: S2S_NAMES_WHITELIST
            value: 'jui_webapp,sscs,divorce,ccd,em_gw'
          - name: CASE_WORKER_ROLES
            value: 'caseworker-probate,caseworker-cmc,caseworker-sscs,caseworker-divorce'
          - name: ENABLE_IDAM_HEALTH_CHECK
            value: 'false'
          - name: ENABLE_S2S_HEALTH_CHECK
            value: 'false'
          - name: ENABLE_LIQUIBASE
            value: 'true'
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "2500m"
        ports:
          - containerPort: 8080
            name: http
        imagePullPolicy: Always