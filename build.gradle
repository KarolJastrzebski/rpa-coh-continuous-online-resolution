plugins {
    id 'application'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE'
    id 'org.springframework.boot' version '2.0.1.RELEASE'
    id 'org.owasp.dependencycheck' version '3.1.2'
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'org.sonarqube' version '2.6.2'
    id 'jacoco'
    id "com.github.spacialcircumstances.gradle-cucumber-reporting" version "0.0.11"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'com.github.ben-manes.versions'

group 'uk.gov.hmcts.reform.coh'
version '0.0.1'
sourceCompatibility = 1.8
mainClassName = 'uk.gov.hmcts.reform.coh.Application'

repositories {
    maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    jcenter()
    mavenLocal()
}

apply from: 'liquibase.gradle'

def versions = [
        postgresql         : '42.2.2',
        springBoot         : '2.0.1.RELEASE',
        springfoxSwagger   : '2.7.0',
]

dependencies {
    compile("io.springfox:springfox-swagger2:${versions.springfoxSwagger}")
    compile("io.springfox:springfox-swagger-ui:${versions.springfoxSwagger}")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("org.postgresql:postgresql:${versions.postgresql}")
    compile group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version: '1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-core', version: '1.2.5'
}

bootJar {
    baseName = 'continuous-online-hearing'
    version =  '0.0.1'
}

def coverageExclusionList = [
        '**uk/gov/hmcts/reform/coh/Application*',
        '**uk/gov/hmcts/reform/coh/domain/*',
]

//(jacocoTestReport | jacocoTestCoverageVerification)
jacoco {
    toolVersion = '0.7.9' // jacocoMavenPluginVersion
    reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
    executionData(test)

    reports {
        xml.enabled = true
        csv.enabled = true
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: coverageExclusionList)
        })
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "${rootProject.name}"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.exclusions", coverageExclusionList.join(", ")
    }
}
